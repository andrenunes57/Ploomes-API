using System.Collections.Generic;
using System.Linq;
using System.Threading.Tasks;
using Microsoft.AspNetCore.Http;
using Microsoft.AspNetCore.Mvc;
using Microsoft.EntityFrameworkCore;
using PloomesApi.Context;
using PloomesApi.Models;

namespace PloomesApi.Controllers
{
    [Route("api/[controller]")]
    [ApiController]
    [Produces("application/json")]
    public class EmployeesController : ControllerBase
    {
        private readonly AppDbContext _context;

        public EmployeesController(AppDbContext context)
        {
            _context = context;
        }

        /// <summary>
        ///     Returns all the employees in the system
        /// </summary>
        /// <response code="200">Returns all the employees in the system</response>
        [HttpGet]
        [ProducesResponseType(typeof(Employee), 200)]
        public async Task<ActionResult<IEnumerable<Employee>>> GetEmployees()
        {
            return await _context.Employees.ToListAsync();
        }

        /// <summary>
        ///     Returns a employees by ID in the system
        /// </summary>
        /// <param name="id">Employee identifier autogenerated.</param>
        /// <response code="200">Returns a employees by ID in the system</response>
        /// <response code="404">Employee not found</response>
        [HttpGet("{id}")]
        [ProducesResponseType(typeof(Employee), 200)]
        [ProducesResponseTypeAttribute(StatusCodes.Status404NotFound)]
        public async Task<ActionResult<Employee>> GetEmployee(int id)
        {
            var employee = await _context.Employees.FindAsync(id);

            if (employee == null)
            {
                return NotFound();
            }

            return employee;
        }

        /// <summary>
        ///     Creates a employee in the system
        /// </summary>
        /// <param name="employee">Employee to be created</param>
        /// <remarks>
        ///     ***The "id" parameter has to be passed as 0 or be omitted because is automatically generated**
        /// </remarks>s
        /// <response code="201">Registers a employee in the system</response>
        /// <response code="500">Cannot insert explicit value for "id" (alternatives: pass the value 0 or omit the parameter).</response>
        [HttpPost]
        [ProducesResponseType(typeof(Employee), 201)]
        [ProducesResponseTypeAttribute(StatusCodes.Status500InternalServerError)]
        public async Task<ActionResult<Employee>> PostEmployee(Employee employee)
        {
            _context.Employees.Add(employee);
            await _context.SaveChangesAsync();

            return CreatedAtAction("GetEmployee", new { id = employee.Id }, employee);
        }

        private bool EmployeeExists(int id)
        {
            return _context.Employees.Any(e => e.Id == id);
        }
    }
}
